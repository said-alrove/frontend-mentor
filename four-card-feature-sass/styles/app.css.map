{"version":3,"sourceRoot":"","sources":["../scss/theme/members/_fonts.scss","../scss/app.scss","../scss/01-base/_base.scss","../scss/theme/vendors/_lessier.scss","../scss/02-module/_module.scss","../scss/03-layout/index.scss","../scss/03-layout/_layout-upper.scss","../scss/03-layout/_layout-main.scss","../scss/03-layout/_layout-attribution.scss","../scss/04-state/_state.scss"],"names":[],"mappings":"AACQ;ACOR;ACLA;EACI;ECsPI;;;ADlPR;EAEQ;EACA;EAEJ;;;AAGJ;EACI;EACA;;AC0OI;EAEW;;;ADxOnB;EAAM;;;ADZN;AGPA;EACI;EACA;EACA;;ADkOA;ECrOJ;IAKQ;;;;AHIR;AIRA;ACAI;EAAc;;AAEd;EACI;;AAEA;EACI;;AH8NR;EG/NI;IAGQ;;;AH4NZ;EG/NI;IAMQ;;;AAIR;EACI;EACA;;AAGJ;EACI;EACA;;AAGJ;EACI;EACA;EACA;;AHwMR;EG3MI;IAKQ;;;AHsMZ;EG3MI;IAQQ;IACA;;;;ADhChB;AEFI;EACI;;AJmOJ;EIpOA;IJiCA;IAEI;IAkCA,KIlE2E;;;AJiO/E;EIpOA;IJiCA;IAEI;IAOQ,gBIpCoE;;;AAIhF;EJ+EA;EAII,gBIlF4B;EJ2FrB,KI3FmC;EAC1C;EACA;EACA;EJgKA;EIvJA;;AJ6MJ;EI1NA;IAeQ;;;AAGJ;EACI;;AJuMR;EIxMI;IAGQ;IACA;;;AJoMZ;EIxMI;IAQQ;IACA;;;AAIR;EACI;;AJ0LR;EI3LI;IAGQ;IACA;;;AJuLZ;EI3LI;IAOQ;IACA;;;AAIR;EACI;;AJ8KR;EI/KI;IAGQ;IACA;;;AJ2KZ;EI/KI;IAOQ;IACA;;;AAIR;EACI;;AJkKR;EInKI;IAGQ;IACA;;;AJ+JZ;EInKI;IAOQ;IACA;;;AAMR;EAEQ;EACA;EAEJ;;AAKJ;EACI;EACA;;AAIR;EACI;EACA;;AJmIJ;EIrIA;IAIQ;;;;AF/FZ;AGLA;EACI;EACA;EACA;;AAEA;EACI;EACA;;;APIR;AQVI;EAEI;;ANkOJ;EM/NY;IAAU;;EAIV;IAAU;;EAIV;IAAU;;EAIV;IAAU;;;;AAOtB;EACI;;AAEA;EACI","file":"app.css","sourcesContent":["@use 'sass:string';\r\n@import 'https://fonts.googleapis.com/css2?family=Poppins:wght@200;400;600&display=swap';\r\n\r\n//********************************* \r\n//* FONTS \r\n//*********************************\r\n$ff: (\r\n    'main': string.quote('Poppins')\r\n);","//********************************* \r\n//* MODULES \r\n//*********************************\r\n@use 'theme' as * with (\r\n    $less-vw-tablet-lg: 1100px,\r\n    $less-vw-tablet-xl: 1212px\r\n);\r\n\r\n/* BASE */ \r\n@import '01-base/base';\r\n/* UTILITIES */ \r\n@import '02-module/module';\r\n/* LAYOUT */ \r\n@import '03-layout/index';\r\n/* STATE */\r\n@import '04-state/state';","//********************************* \r\n//* HTML TAGS \r\n//*********************************\r\nhtml {\r\n    font-size: 62.5%;\r\n    @include less-box();\r\n}\r\n\r\nbody { \r\n    font: {\r\n        family: map-get($ff, 'main');\r\n        size: 16px;\r\n    }\r\n    background-color: map-get($clr, 'lt', 'gray-100');\r\n}\r\n\r\n* {\r\n    margin: 0;\r\n    padding: 0;\r\n    @include less-box();\r\n}\r\n\r\nimg { max-inline-size: 100%; }\r\n","////////////////////////// \r\n// *** LESSIER 1.5 *** // \r\n///////////////////////// \r\n\r\n@use 'sass:math';\r\n@use 'sass:map';\r\n@use 'sass:list';\r\n@use 'sass:meta';\r\n@use 'sass:selector';\r\n@use 'sass:string';\r\n@use 'sass:color';\r\n\r\n///////////////////// \r\n// *** MIXINS *** //\r\n////////////////////\r\n\r\n//************************\r\n//* CSS GRID\r\n//************************ \r\n@mixin grid\r\n(\r\n    $rows: false, \r\n    $cols: false, \r\n    $flow: false, \r\n    $auto-rows: false, \r\n    $auto-cols: false,  \r\n    $plc-items: false, \r\n    $jt-items: false, \r\n    $al-items: false, \r\n    $plc-content: false,\r\n    $jt-content: false, \r\n    $al-content: false, \r\n    $row-gap: false, \r\n    $col-gap: false,\r\n    $gap: false\r\n) \r\n{\r\n    display: grid;\r\n    @if $rows and $cols {\r\n        grid: $rows / $cols;\r\n    } @else if $rows {\r\n        grid-template-rows: $rows;\r\n    } @else if $cols {\r\n        grid-template-columns: $cols;\r\n    }\r\n\r\n    @if $flow { grid-auto-flow: $flow; }\r\n    \r\n    @if $auto-rows { grid-auto-rows: $auto-rows; }\r\n\r\n    @if $auto-cols { grid-auto-columns: $auto-cols; }\r\n\r\n    @if $plc-items {\r\n        place-items: $plc-items;\r\n    } @else if $jt-items and $al-items {\r\n        @error 'You are trying to use the $jt-items and $al-items arguments individually instead of using the shorthand $plc-items for fewer code';\r\n    } @else if $jt-items {\r\n        justify-items: $jt-items;\r\n    } @else if $al-items {\r\n        align-items: $al-items;\r\n    }\r\n\r\n    @if $plc-content {\r\n        place-content: $plc-content;\r\n    } @else if $jt-content and $al-content {\r\n        @error 'You are trying to use the $jt-content and $al-content arguments individually instead of using the shorthand $plc-content for fewer code';\r\n    } @else if $jt-content {\r\n        justify-content: $jt-content;\r\n    } @else if $al-content {\r\n        align-content: $al-content;\r\n    }\r\n\r\n    @if $gap { \r\n        gap: $gap; \r\n    } @else if $row-gap {\r\n        row-gap: $row-gap;\r\n    } @else if $col-gap {\r\n        column-gap: $col-gap;\r\n    }\r\n}\r\n\r\n//************************\r\n//* CSS FLEXBOX\r\n//************************\r\n@mixin flexbox\r\n(\r\n    $dir: false, \r\n    $wrap: false, \r\n    $jt-content: false, \r\n    $al-items: false,\r\n    $gap: false\r\n)\r\n{\r\n    display: flex;\r\n    @if $dir and $wrap {\r\n        flex-flow: $dir $wrap;\r\n    } @else if $dir {\r\n        flex-direction: $dir;\r\n    } @else if $wrap {\r\n        flex-wrap: $wrap;\r\n    }\r\n\r\n    @if $jt-content { justify-content: $jt-content; }\r\n\r\n    @if $al-items { align-items: $al-items; }\r\n\r\n    @if $gap { gap: $gap; }\r\n}\r\n\r\n//************************\r\n//* PSEUDO-ELEMENT\r\n//************************\r\n@mixin pseudo-element\r\n(\r\n    $loc: before, \r\n    $cont: '',\r\n    $pos: absolute,\r\n    $inset: false,\r\n    $top: 0,\r\n    $bottom: 0,\r\n    $left: 0,\r\n    $right: 0\r\n) \r\n{\r\n    position: relative;\r\n    &::#{$loc} {\r\n        content: $cont;\r\n        position: $pos;\r\n        @if $inset {\r\n            inset: $inset;\r\n        } @else if $inset == false {\r\n            inset: $top $right $bottom $left;\r\n        }\r\n        @content;\r\n    }\r\n}\r\n\r\n//************************\r\n//* SUPPORT\r\n//************************ \r\n@mixin support\r\n(\r\n    $property: false, \r\n    $value: false, \r\n    $support: false,\r\n    $args...\r\n) \r\n{\r\n    #{$property}: $value;\r\n    @supports not (#{$property}: $value) {\r\n        #{$property}: $value; \r\n        @if $support {\r\n            @each $key, $prefix in meta.keywords($args) {\r\n                -#{$prefix}-#{$property}: $value;\r\n            }\r\n        } @else if $support != true {\r\n            -webkit-#{$property}: $value;\r\n            -moz-#{$property}: $value;\r\n            -ms-#{$property}: $value;\r\n            -o-#{$property}: $value;\r\n        }\r\n    }\r\n}\r\n\r\n//************************\r\n//* SHADOW\r\n//************************\r\n@mixin shadow\r\n(\r\n    $type: box,\r\n    $x-axis: 0, \r\n    $y-axis: 0, \r\n    $blur: 0, \r\n    $spread: 0, \r\n    $color: #000, \r\n) \r\n{\r\n    @if $type == 'box' {\r\n        #{$type}-shadow: $x-axis $y-axis $blur $spread $color;\r\n    } @else if $type == 'text' {\r\n        #{$type}-shadow: $x-axis $y-axis $blur $color;\r\n    } @else {\r\n        @error '#{$type} is an unknown value, try using either box or text for creating shadows';\r\n    }\r\n}\r\n\r\n//************************\r\n//* MEDIA QUERIES\r\n//************************\r\n$vw-mobile-sm: 360px !default;\r\n$vw-mobile-md: 414px !default;\r\n$vw-mobile-lg: 480px !default;\r\n$vw-mobile-xl: 552px !default;\r\n\r\n$vw-tablet-sm: 768px !default;\r\n$vw-tablet-md: 912px !default;\r\n$vw-tablet-lg: 1024px !default;\r\n$vw-tablet-xl: 1280px !default;\r\n\r\n$vw-desktop-sm: 1366px !default;\r\n$vw-desktop-md: 1536px !default;\r\n$vw-desktop-lg: 1920px !default;\r\n\r\n$screen-sizes: \r\n(\r\n    'mobile': (\r\n        'sm': $vw-mobile-sm,\r\n        'md': $vw-mobile-md,\r\n        'lg': $vw-mobile-lg,\r\n        'xl': $vw-mobile-xl\r\n    ),\r\n    'tablet': (\r\n        'sm': $vw-tablet-sm,\r\n        'md': $vw-tablet-md,\r\n        'lg': $vw-tablet-lg,\r\n        'xl': $vw-tablet-xl\r\n    ),\r\n    'desktop': (\r\n        'sm': $vw-desktop-sm,\r\n        'md': $vw-desktop-md,\r\n        'lg': $vw-desktop-lg\r\n    )\r\n);\r\n\r\n@mixin query\r\n(\r\n    $type: min-width, \r\n    $device: false, \r\n    $size: false\r\n) \r\n{\r\n    $screen: map.get($screen-sizes, $device, $size); \r\n    @media (#{$type}: $screen) { @content; }\r\n\r\n    @if $device == false { \r\n        @error 'You have not given an available device value for your media query yet'; \r\n    } @else if $size == false {\r\n        @error 'You have not given an available screen size for your media query yet';\r\n    }\r\n}\r\n\r\n//************************\r\n//* BOX-MODEL\r\n//************************\r\n@mixin box() {\r\n    $selector: selector.parse(&);\r\n    $parent-1: selector.parse('html');\r\n    $parent-2: selector.parse('*');\r\n\r\n    @if $parent-1 == $selector {\r\n        box-sizing: border-box;\r\n    } @else if $parent-2 == $selector {\r\n        &,\r\n        &::before,\r\n        &::after { box-sizing: inherit; }\r\n    } @else {\r\n        @error 'You are trying to parse this mixin within a selector that is neither #{$parent-1} or #{$parent-2}';\r\n    }\r\n}\r\n\r\n//************************\r\n//* COMING SOON...\r\n//************************","//********************************* \r\n//* UTILITIES \r\n//*********************************\r\n.container {\r\n    margin-inline: auto;\r\n    inline-size: clamp(30rem, 90%, 110rem);\r\n    padding-inline: 2rem;\r\n    @include less-query($device: 'tablet', $size: 'lg') {\r\n        padding-inline: 0;\r\n    }\r\n}","//********************************* \r\n//* COMPONENTS \r\n//*********************************\r\n\r\n/* LAYOUT-UPPER */ \r\n@import 'layout-upper';\r\n/* LAYOUT-MAIN */ \r\n@import 'layout-main';\r\n/* LAYOUT-ATTRIBUTION */ \r\n@import 'layout-attribution';","//********************************* \r\n//* UPPER-CONTAINER \r\n//*********************************\r\n.upper {\r\n    &-container { padding-block: 7.5rem 6rem; }\r\n    \r\n    &__text {\r\n        text-align: center;\r\n\r\n        &:not(:nth-child(3)) {\r\n            font-size: 2.4rem; \r\n            @include less-query($device: 'tablet', $size: 'sm') {\r\n                font-size: 2.8rem;\r\n            }\r\n            @include less-query($device: 'tablet', $size: 'lg') {\r\n                font-size: 3.6rem;\r\n            }\r\n        }\r\n\r\n        &:nth-child(1) {\r\n            font-weight: 200;\r\n            color: map-get($clr, 'dk', 'blue-200');\r\n        }\r\n\r\n        &:nth-child(2) {\r\n            font-weight: 600;\r\n            color: map-get($clr, 'dk', 'blue-200');\r\n        }\r\n\r\n        &:nth-child(3) {\r\n            padding-block-start: 1.5rem;\r\n            font-size: 1.4rem;\r\n            color: map-get($clr, 'dk', 'blue-100');\r\n            @include less-query($device: 'tablet', $size: 'sm') {\r\n                font-size: 1.75rem;\r\n            }\r\n            @include less-query($device: 'tablet', $size: 'lg') {\r\n                margin-inline: auto;\r\n                inline-size: 55%;\r\n            }\r\n        }\r\n    }\r\n}\r\n","//********************************* \r\n//* MAIN-CONTAINER \r\n//*********************************\r\n.main {\r\n    &-container {\r\n        margin-block-end: 4rem;\r\n        @include less-query($device: 'tablet',$size: 'sm') {\r\n            @include less-grid($rows: repeat(3, 1fr), $cols: repeat(4, 1fr), $gap: 3rem);\r\n        }\r\n        @include less-query($device: 'tablet', $size: 'lg') {\r\n            @include less-grid($rows: repeat(4, 1fr), $cols: repeat(3, 1fr), $flow: dense);\r\n        }\r\n    }\r\n\r\n    &__card {\r\n        @include less-flexbox($dir: column, $gap: 1rem);\r\n        margin-block: 2.5rem;\r\n        min-block-size: 20rem;\r\n        padding: 2rem 3rem;\r\n        @include less-shadow\r\n        (\r\n            $type: 'box',\r\n            $y-axis: .75rem,\r\n            $spread: -1rem,\r\n            $blur: 3rem,\r\n            $color: map-get($clr, 'dk', 'blue-100')\r\n        );\r\n        border-radius: .5rem;\r\n        @include less-query($device: 'tablet', $size: 'sm') {\r\n            margin-block: unset;\r\n        }\r\n\r\n        &:nth-child(1) {\r\n            border-block-start: .4rem solid map-get($clr, 'lt', 'cyan-100');\r\n            @include less-query($device: 'tablet', $size: 'sm') {\r\n                grid-row: 2 / 3;\r\n                grid-column: 1 / 3;\r\n                \r\n            }\r\n            @include less-query($device: 'tablet', $size: 'lg') {\r\n                grid-row: 2 / 4;\r\n                grid-column: 1 / 2;\r\n            }\r\n        }\r\n\r\n        &:nth-child(2) {\r\n            border-block-start: .4rem solid map-get($clr, 'lt', 'red-100');\r\n            @include less-query($device: 'tablet', $size: 'sm') {\r\n                grid-row: 1 / 2;\r\n                grid-column: 2 / 4; \r\n            }\r\n            @include less-query($device: 'tablet', $size: 'lg') {\r\n                grid-column: 2 / 3;\r\n                grid-row: 1 / 3;\r\n            }\r\n        }\r\n\r\n        &:nth-child(3) {\r\n            border-block-start: .4rem solid map-get($clr, 'lt', 'orange-100');\r\n            @include less-query($device: 'tablet', $size: 'sm') {\r\n                grid-row: 3 / -1;\r\n                grid-column: 2 / 4;\r\n            }\r\n            @include less-query($device: 'tablet', $size: 'lg') {\r\n                grid-row: 3 / -1;\r\n                grid-column: 2 / 3;\r\n            }\r\n        }\r\n\r\n        &:nth-child(4) {\r\n            border-block-start: .4rem solid map-get($clr, 'lt', 'blue-100');\r\n            @include less-query($device: 'tablet', $size: 'sm') {\r\n                grid-row: 2 / 3;\r\n                grid-column: 3 / -1;\r\n            }\r\n            @include less-query($device: 'tablet', $size: 'lg') {\r\n                grid-row: 2 / 4;\r\n                grid-column: 3 / -1;\r\n            }\r\n        }\r\n    }\r\n\r\n    &__header {\r\n        > h2 {\r\n            font: {\r\n                size: 2rem;\r\n                weight: 600;\r\n            }\r\n            color: map-get($clr, 'dk', 'blue-200');\r\n        }\r\n    }\r\n    \r\n    &__content {\r\n        > p {\r\n            font-size: 1.4rem;\r\n            color: map-get($clr, 'dk', 'blue-100');\r\n        }\r\n    }\r\n\r\n    &__icon {\r\n        margin-block-start: 1rem;\r\n        align-self: flex-end;\r\n        @include less-query($device: 'tablet', $size: 'xl') {\r\n            margin-block-start: 4rem;   \r\n        }\r\n    }\r\n}","//********************************* \r\n//* ATTRIBUTION \r\n//*********************************\r\n.attribution {\r\n    padding-block: 1rem;\r\n    font-size: 1.4rem;\r\n    text-align: center;\r\n\r\n    > a {\r\n        color: map-get($clr, 'dk', 'blue-300');\r\n        text-decoration: none;\r\n    }\r\n}\r\n","//********************************* \r\n//* STATES \r\n//*********************************\r\n.main {\r\n    &__card {\r\n        $_translate: 10%;\r\n        transition: all 300ms ease-in-out;\r\n        @include less-query($device: 'tablet', $size: 'lg') {\r\n            &:nth-child(1) {\r\n                &:hover { transform: translateX(-$_translate); }\r\n            }\r\n    \r\n            &:nth-child(2) {\r\n                &:hover { transform: translateY(-$_translate); }\r\n            }\r\n    \r\n            &:nth-child(3) {\r\n                &:hover { transform: translateY($_translate); }\r\n            }\r\n    \r\n            &:nth-child(4) {\r\n                &:hover { transform: translateX($_translate); }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n.attribution {\r\n    > a {\r\n        transition: all 150ms ease-in-out;\r\n\r\n        &:hover { \r\n            color: color-scale(map-get($clr, 'dk', 'blue-300'), $lightness: 40%); \r\n        }\r\n    }\r\n}"]}